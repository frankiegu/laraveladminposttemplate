<?php

namespace App\Admin\Controllers\DummyModule;

use App\Models\DummyModule\DummyCategoryModel;
use App\Models\DummyModule\DummyPostModel;
use Encore\Admin\Controllers\AdminController;
use Encore\Admin\Form;
use Encore\Admin\Grid;
use Encore\Admin\Show;

class DummyPostController extends AdminController
{
    /**
     * Title for current resource.
     *
     * @var string
     */
    protected $title = '文章';

    /**
     * Make a grid builder.
     *
     * @return Grid
     */
    protected function grid()
    {
        $grid = new Grid(new DummyPostModel);
        $grid->model()->with(['DummyNameCategory', 'DummyNameComment:id,name'])->orderBy('id', 'desc');

        $grid->column('id', __('Id'));
        $grid->column('DummyNameCategory.name', __('DummyCategory'))->link(route('DummyNameCategory.index'), 'self');
        $grid->column('title', __('Title'))->limit(30);
        $grid->column('thumb', __('Thumb'))->image();
        $grid->column('DummyNameComment', __('DummyComment'))->display(function ($DummyComment) {
            return "<a href='"  . route('DummyNameComment.index', [
                'DummyNamePost_id' => $this->id,
            ]) . "'>" . count($DummyComment) . "</a>";
        });
        //$grid->column('content', __('Content'));
        $grid->column('created_at', __('Created at'));
        $grid->column('updated_at', __('Updated at'));
        //$grid->column('deleted_at', __('Deleted at'));
        $grid->filter(function ($filter) {
            $filter->disableIdFilter();
            $filter->column(1/2, function ($filter) {
                $filter->equal('DummyNameCategory_id', __("DummyCategory"))->select(DummyCategoryModel::pluck('name', 'id'));
                $filter->like('title', __("Title"));
            });
            $filter->column(1/2, function ($filter) {
                $filter->equal('created_at', __('Created at'))->datetime();
                $filter->between('updated_at', __('Updated at'))->datetime();
            });
        });

        return $grid;
    }

    /**
     * Make a show builder.
     *
     * @param mixed $id
     * @return Show
     */
    protected function detail($id)
    {
        $show = new Show(DummyPostModel::findOrFail($id));

        $show->field('id', __('Id'));
        $show->field('DummyNameCategory', __('DummyCategory'));
        $show->field('title', __('Title'));
        $show->field('thumb', __('Thumb'));
        $show->field('content', __('Content'));
        $show->field('created_at', __('Created at'));
        $show->field('updated_at', __('Updated at'));
        $show->field('deleted_at', __('Deleted at'));

        return $show;
    }

    /**
     * Make a form builder.
     *
     * @return Form
     */
    protected function form()
    {
        $form = new Form(new DummyPostModel);

        $form->select('DummyNameCategory_id', __('DummyCategory'))->options(DummyCategoryModel::pluck('name', 'id'))->rules('required');
        $form->text('title', __('Title'));
        $form->image('thumb', __('Thumb'))->move('uploads/DummyNameModule/DummyNamePost/' . date('Y/m/d'))->uniqueName();
        $form->UEditor('content', __('Content'));

        return $form;
    }
}
